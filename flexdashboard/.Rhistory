responsive=TRUE # 確保responsive
)  %>%
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
) %>%
plotly_build() %>% # 生成plotly list
.$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
jsonlite::toJSON(
digits = 50,
auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
pretty=T) %>%
writeLines(
"pltly_p0.json"
)
library(dplyr)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
)  %>%
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
) %>%
plotly_build() %>% # 生成plotly list
.$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
jsonlite::toJSON(
digits = 50,
auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
pretty=T) %>%
writeLines(
"pltly_p0.json"
)
library(dplyr)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
)  %>%
plotly_build() %>% # 生成plotly list
.$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
jsonlite::toJSON(
digits = 50,
auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
pretty=T) %>%
writeLines(
"pltly_p0.json"
)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # 非htmlwidget要設T
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # 非htmlwidget要設T
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # 非htmlwidget要設T
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # 非htmlwidget要設T
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
View(to_frameableHTML)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # plotly htmlwidget要設F
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
library(dplyr); library(ggplot2); library(plotly)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
browseVignettes("widgetframe")
library(leaflet)
library(widgetframe)
l <- leaflet() %>% addTiles()
htmlwidgets::saveWidget(frameableWidget(l),'leaflet.html')
library(leaflet)
library(widgetframe)
l <- leaflet() %>% addTiles()
htmlwidgets::saveWidget(frameableWidget(l),'leaflet.html')
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
library(dplyr); library(ggplot2); library(plotly)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(dplyr)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
# pltly_p0 %>%
#   layout(
#     autosize=TRUE
#   ) %>%
#   config(
#     responsive=TRUE # 確保responsive
#   )  %>%
#   plotly_build() %>% # 生成plotly list
#   .$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
#   jsonlite::toJSON(
#     digits = 50,
#     auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
#     pretty=T) %>%
#   writeLines(
#     "pltly_p0.json"
#   )
library(dplyr)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0
# pltly_p0 %>%
#   layout(
#     autosize=TRUE
#   ) %>%
#   config(
#     responsive=TRUE # 確保responsive
#   )  %>%
#   plotly_build() %>% # 生成plotly list
#   .$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
#   jsonlite::toJSON(
#     digits = 50,
#     auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
#     pretty=T) %>%
#   writeLines(
#     "pltly_p0.json"
#   )
library(dplyr)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>% frameWidget()
# pltly_p0 %>%
#   layout(
#     autosize=TRUE
#   ) %>%
#   config(
#     responsive=TRUE # 確保responsive
#   )  %>%
#   plotly_build() %>% # 生成plotly list
#   .$x %>% # 取 list中的x元素（名字叫x是htmlwidgets的開發規定）
#   jsonlite::toJSON(
#     digits = 50,
#     auto_unbox = TRUE, force = TRUE, null = "null", na = "null",
#     pretty=T) %>%
#   writeLines(
#     "pltly_p0.json"
#   )
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = F) # plotly htmlwidget要設F
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"./bsHTML/bsHTML_flxdb.html" %>%
to_frameableHTML(regularHTML = T) # 非htmlwidget要設T
library(htmlwidgets)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
knitr::opts_chunk$set(echo = TRUE, message=F, warning = F)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>% frameWidget()
htmltools::includeHTML("mtContent_tabset_plotly.html")
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>% frameWidget()
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>% partial_bundle() %>% frameWidget()
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtHTML_tabset_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtHTML_tabset_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtContent_tabset_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtContent_tabset_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtContent_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtContent_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
"mtHTML/mtHTML_plotly.html" %>%
to_frameableHTML(regularHTML = T)
"./bsHTML/bsHTML_flxdb.html" %>%
to_frameableHTML(regularHTML = T) # 非htmlwidget要設T
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(flexdashboard);library(dplyr)
library(widgetframe)
source("./R/support.R")
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
library(dplyr)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
) %>% partial_bundle() %>% frameWidget()
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>%
layout(
autosize=TRUE
) %>%
config(
responsive=TRUE # 確保responsive
) %>% partial_bundle() %>% #frameWidget()
# pltly_p0 %>%
save_frameableWidget("pltly_p0.html")
"pltly_p0.html" %>%
to_frameableHTML(regularHTML = T)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
pltly_p0 %>%
# layout(
#   autosize=TRUE
# ) %>%
# config(
#   responsive=TRUE # 確保responsive
# ) %>% partial_bundle() %>% #frameWidget()
# pltly_p0 %>%
save_frameableWidget("pltly_p0.html")
"pltly_p0.html" %>%
to_frameableHTML(regularHTML = T)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8800,initpath=params$output_filename)
"mtHTML/mtHTML_tabSet_plotly.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要設F
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
library(htmlwidgets)
?saveWidget
htmlwidgets::saveWidget(frameableWidget(pltly_p0),'pltly_p0.html')
htmltools::includeHTML('htmlFragment_pltly_p0.html')
htmltools::includeHTML('htmlFragment_pltly_p0.html')
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
# widgetframe::frameWidget(pltly_p0)
htmlwidgets::saveWidget(frameableWidget(pltly_p0),'mtHTML/pltly_p0.html')
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
# widgetframe::frameWidget(pltly_p0)
htmlwidgets::saveWidget(frameableWidget(pltly_p0),'pltly_p0.html')
# "pltly_p0.html" %>%
# to_frameableHTML(regularHTML = T)
htmltools::tags$iframe(
src = "mtHTML/pltly_p0.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0",
width="100%",
height="100%"
)
library(dplyr); library(ggplot2); library(plotly); library(widgetframe)
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() + geom_smooth()
pltly_p0 <- ggplotly(p)
# widgetframe::frameWidget(pltly_p0)
htmlwidgets::saveWidget(frameableWidget(pltly_p0),'pltly_p0.html')
# "pltly_p0.html" %>%
# to_frameableHTML(regularHTML = T)
"pltly_p0.html" %>%
to_frameableHTML(regularHTML = T) # plotly htmlwidget要
servr::daemon_stop(
which=servr::daemon_list()
)
servr::httd(dir=".",port=8000,initpath=params$output_filename)
